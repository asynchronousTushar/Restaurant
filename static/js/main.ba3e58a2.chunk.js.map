{"version":3,"sources":["components/Header/Navigation.js","components/Header/Header.js","components/Body/Item.js","components/Body/DishesList.js","components/Body/Comments.js","components/Body/CommentForm.js","components/Body/Loader.js","redux/actionTypes.js","redux/serverURL.js","redux/actionCreator.js","components/Body/List.js","components/representional/Home.js","components/representional/Gallery.js","components/representional/Blog.js","components/representional/Contact.js","components/representional/Recipe.js","components/representional/About.js","components/Body/Body.js","components/Footer/Footer.js","components/Main.js","redux/Reducer.js","redux/form.js","redux/Store.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","state","isNavOpen","togglerHandeler","setState","className","Navbar","dark","color","expand","to","exact","NavbarBrand","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","React","Component","Header","Item","props","Card","CardImg","top","src","item","image","alt","name","CardBody","style","textAlign","CardTitle","CardText","description","price","DishesList","dishesItem","height","cursor","fontWeight","display","paddingTop","listItem","Comments","comment","author","rating","fontSize","dateFormat","date","CommentForm","onChangeHandeler","event","target","value","onSubmitHandeler","addComment","dishId","preventDefault","Form","onSubmit","Input","type","placeholder","onChange","required","Button","Loader","padding","loadComments","commentsLoading","loadDishes","dishesLoading","dishesLoadFailed","serverUrl","commentConcat","key","actionType","payload","comments","fetchComments","dispatch","a","axios","data","console","log","message","commentsServerfetching","fetchDishes","dishes","DISHES","errMess","dishesServerfetching","List","selectedItem","modelToggler","modelTogglerHandeler","fetchComment","Dishes","isLoading","errMessage","Alert","dishesList","map","bind","id","Dishesdetail","commentsFinder","CommentsData","commentFormDishesId","Modal","size","contentClassName","ModalBody","ModalFooter","connect","newComment","Math","random","toString","Date","toISOString","post","then","response","JSON","parse","config","catch","err","Home","document","title","Gallery","Blog","val","length","isNumber","isNaN","Number","validEmail","test","Contact","alertShow","alertText","alertType","submitHandeler","values","Response","status","setTimeout","error","resetFeedbackForm","paddingLeft","model","FormGroup","row","Label","htmlFor","md","Col","text","validators","show","messages","offset","check","checkbox","select","textarea","rows","actions","reset","Recipe","About","Body","path","component","from","Footer","Main","Reducer","combineReducers","disheState","action","commentstate","concat","push","createForms","feedback","firstname","lastname","telnum","email","agree","contactType","Store","createStore","applyMiddleware","thunk","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ba3e58a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar, NavItem, NavbarToggler, Collapse, NavbarBrand } from 'reactstrap';\r\nimport { NavLink,Link } from 'react-router-dom';\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    state = {\r\n        isNavOpen: false\r\n    }\r\n\r\n\r\n    togglerHandeler = () => {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Navigation\" >\r\n                <Navbar dark color=\"dark\" expand=\"sm\">\r\n                    <div className=\"container\" >\r\n                            <Link to=\"/home\" exact ><NavbarBrand>Grand Restaurant</NavbarBrand> </Link>\r\n                        <NavbarToggler onClick={this.togglerHandeler} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar  >\r\n                            <Nav className=\"ml-auto float-left text-left\" navbar >\r\n                                <NavItem>\r\n                                    <NavLink to=\"/home\" exact className=\"nav-link\" >Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/blog\" exact className=\"nav-link\" >Blog</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/recipe\" exact className=\"nav-link\" >Recipe</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/gallery\" exact className=\"nav-link\" >Gallery</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/contact\" exact className=\"nav-link\" >Contact</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/about\" exact className=\"nav-link\" >About</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <Navigation/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Card, CardTitle, CardBody, CardImg, CardText } from \"reactstrap\"; \r\n\r\n\r\n\r\nconst Item = props => {\r\n    return (\r\n        <li>\r\n            <Card>\r\n                <CardImg top src={ props.item.image} alt={props.item.name} ></CardImg>\r\n                <CardBody style={{textAlign: \"left\"}} >\r\n                    <CardTitle>\r\n                        <h2>{props.item.name}</h2>\r\n                    </CardTitle>\r\n                    <br />\r\n                    <CardText >{props.item.description}</CardText>\r\n                    <h3>Price: { props.item.price} </h3>\r\n                </CardBody>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardImg } from 'reactstrap';\r\n\r\nconst DishesList = (props) => {\r\n\r\n    return (\r\n        <div className=\"col-sm-6 col-md-6 col-lg-4 col-xl-3\">\r\n            <Card color=\"light\" className=\"text-dark my-3 w-100 shadow-lg rounded\">\r\n                <CardBody>\r\n                    <CardImg src={props.dishesItem.image} style={{ height: \"200px\" }} />\r\n                    <br/>\r\n                    <CardTitle style={{ cursor: \"pointer\", fontWeight: \"bold\", display: \"inline-block\", paddingTop: 20 }} className=\"cardtitle\" onClick={props.listItem} >{props.dishesItem.name}</CardTitle>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DishesList;","import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst Comments = props => {\r\n        return (\r\n            <li className=\"mt-3\">\r\n                <Card>\r\n                    <CardBody>\r\n                        <h2>{props.comment.author}</h2>\r\n                        <br />\r\n                        <h5>Rating: {props.comment.rating}</h5>\r\n                        <br />\r\n                        <p style={{ fontWeight: \"bold\" }}>{props.comment.comment}</p>\r\n                        <p style={{ fontSize: \"12px\" }}>{dateFormat(props.comment.date, 'fullDate')}</p>\r\n                    </CardBody>\r\n                </Card>\r\n            </li>\r\n         );\r\n}\r\n\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport { Form, Button, Input } from 'reactstrap';\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        author: \"\",\r\n        rating: \"\",\r\n        comment: \"\"\r\n    }\r\n\r\n    onChangeHandeler = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitHandeler = event => {\r\n        this.props.addComment(this.props.dishId, this.state.author, this.state.rating, this.state.comment);\r\n        this.setState({\r\n            author: \"\",\r\n            rating: \"\",\r\n            comment: \"\"\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={event => this.onSubmitHandeler(event)}>\r\n\r\n                    <Input type=\"text\" name=\"author\" placeholder=\"Your Name\" value={this.state.author} onChange={event => this.onChangeHandeler(event)} required />\r\n                    <br />\r\n                    <Input type=\"select\" name=\"rating\" value={this.state.rating} onChange={event => this.onChangeHandeler(event)}  >\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                        <option>5</option>\r\n                    </Input>\r\n                    <br />\r\n                    <Input type=\"textarea\" name=\"comment\" placeholder=\"Your Comment\" value={this.state.comment} onChange={event => this.onChangeHandeler(event)} required />\r\n                    <br />\r\n                    <Button type=\"submit\" >Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentForm;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"col-12\" style={{padding: \"50px\"}}>\r\n            <span className=\"fa fa-spinner text-primary fa-3x fa-fw fa-pulse\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","export const addComment = 'ADD_COMMENT';\r\n\r\nexport const loadComments = 'LOAD_COMMENTS';\r\nexport const commentsLoading = 'COMMENTS_LOADING';\r\n\r\nexport const loadDishes = 'LOAD_DISHES';\r\nexport const dishesLoading = 'DISHES_LOADING'; \r\nexport const dishesLoadFailed = 'DISHES_LOAD_FAILED';\r\n\r\n","export const serverUrl = \"https://restaurant-project-78e90-default-rtdb.asia-southeast1.firebasedatabase.app/data/\";","import * as actionType from './actionTypes';\r\nimport axios from 'axios';\r\nimport { serverUrl } from './serverURL';\r\n\r\nexport const addComment = (dishId, author, rating, comment) => {\r\n    return dispatch => {\r\n        const newComment = {\r\n\r\n            dishId: dishId,\r\n            comment: comment,\r\n            rating: rating,\r\n            author: author,\r\n            id: Math.random().toString()\r\n        }\r\n        newComment.date = new Date().toISOString();\r\n\r\n        axios.post(serverUrl + \"/CommentsData.json\", newComment)\r\n            .then(response => {\r\n                console.log(JSON.parse(response.config.data));\r\n                dispatch(commentConcat(JSON.parse(response.config.data), response.data.name))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport const commentConcat = (comment, key) => {\r\n    return {\r\n        type: actionType.addComment,\r\n        payload: comment,\r\n        key: key\r\n    }\r\n}\r\n\r\nexport const loadComments = comments => {\r\n    return {\r\n        type: actionType.loadComments,\r\n        payload: comments\r\n    }\r\n}\r\n\r\nexport const commentsLoading = () => {\r\n    return {\r\n        type: actionType.commentsLoading\r\n    }\r\n}\r\n\r\nexport const fetchComments = () => {\r\n    return dispatch => {\r\n        dispatch(commentsLoading());\r\n\r\n        const commentsServerfetching = async () => {\r\n            try {\r\n                let comments = await axios(serverUrl + \"CommentsData.json\");\r\n                dispatch(loadComments(comments.data));\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n        commentsServerfetching();\r\n    }\r\n}\r\n\r\nexport const dishesLoading = () => {\r\n    return {\r\n        type: actionType.dishesLoading\r\n    }\r\n}\r\n\r\nexport const loadDishes = DISHES => {\r\n    return {\r\n        type: actionType.loadDishes,\r\n        payload: DISHES\r\n    }\r\n}\r\n\r\nexport const dishesLoadFailed = errMess => {\r\n    return {\r\n        type: actionType.dishesLoadFailed,\r\n        payload: errMess\r\n    }\r\n}\r\n\r\nexport const fetchDishes = () => {\r\n    return dispatch => {\r\n        dispatch(dishesLoading());\r\n\r\n        let dishesServerfetching = async () => {\r\n            try {\r\n                let dishes = await axios(serverUrl + \"DISHES.json\");\r\n\r\n                dispatch(loadDishes(dishes.data));\r\n\r\n            } catch (error) {\r\n                dispatch(dishesLoadFailed(error.message));\r\n            }\r\n        }\r\n        dishesServerfetching();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Item from './Item';\r\nimport DishesList from './DishesList';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\nimport Loader from './Loader';\r\nimport { Modal, ModalBody, ModalFooter, Button, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchComments, fetchDishes } from '../../redux/actionCreator';\r\n\r\nconst mapstatetoprops = state => {\r\n    return {\r\n        Dishes: state.dishes,\r\n        CommentsData: state.comments\r\n    }\r\n}\r\n\r\nconst mapdispatchtoprops = dispatch => {\r\n    return {\r\n        addComment: (dishId, author, rating, comment) => {\r\n            dispatch(addComment(dishId, author, rating, comment))\r\n        },\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComment: () => dispatch(fetchComments())\r\n    }\r\n}\r\n\r\nclass List extends Component {\r\n    state = {\r\n        selectedItem: null,\r\n        modelToggler: false\r\n    }\r\n\r\n    listItem = (item) => {\r\n        this.setState({\r\n            selectedItem: item,\r\n            modelToggler: !this.state.modelToggler\r\n        });\r\n    }\r\n\r\n    modelTogglerHandeler = () => {\r\n        this.setState({\r\n            modelToggler: !this.state.modelToggler\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComment();\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if (this.props.Dishes.isLoading) {\r\n            return (\r\n                <div>\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        } else if (this.props.Dishes.errMessage !== null) {\r\n            return (\r\n                <Alert color = \"danger\" >{ this.props.Dishes.errMessage }</Alert>\r\n            );\r\n        } else {\r\n            const dishesList = this.props.Dishes.dishes.map(item => {\r\n                return (\r\n                    <DishesList  dishesItem={item} key={item.id} listItem={this.listItem.bind(this, item)} />\r\n                );\r\n            });\r\n\r\n            let Dishesdetail = null;\r\n\r\n            if (this.state.selectedItem != null) {\r\n                Dishesdetail = <ul className=\"row text-center\">\r\n                    <Item item={this.state.selectedItem} />\r\n                </ul>\r\n            }\r\n\r\n            let commentsFinder = null;\r\n\r\n            if (this.props.CommentsData.isLoading) {\r\n                commentsFinder = <Loader />;\r\n\r\n            } else {\r\n                \r\n                if (this.state.selectedItem != null) {\r\n                    commentsFinder = this.props.CommentsData.comments.map(item => {\r\n    \r\n                        if (item.dishId === this.state.selectedItem.id) {\r\n                            return (\r\n                                <Comments comment={item} key={item.id} />\r\n                            );\r\n                        }\r\n    \r\n                        return null;\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n\r\n            let commentFormDishesId = null;\r\n\r\n            if (this.state.selectedItem) {\r\n                commentFormDishesId = this.state.selectedItem.id;\r\n            }\r\n\r\n            return (\r\n                <div className=\"List \" >\r\n                    <div className=\" d-flex flex-wrap m-2 text-center\">\r\n                            {dishesList}\r\n                    </div>\r\n                    <div className=\"row\" >\r\n                        <Modal isOpen={this.state.modelToggler} size=\"lg\" contentClassName=\"my-modal-style\">\r\n                            <ModalBody >\r\n                                {Dishesdetail}\r\n                                <ul>{commentsFinder}</ul>\r\n                                <br />\r\n                                <CommentForm dishId={commentFormDishesId} addComment={this.props.addComment} />\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button onClick={this.modelTogglerHandeler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapstatetoprops, mapdispatchtoprops)(List);","import React, { Component } from 'react';\r\nimport List from '../Body/List';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        document.title = \"Grand Restaurant\";\r\n        return (\r\n            <div>\r\n                <List />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n    document.title = \"Gallery\";\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Blog = () => {\r\n    document.title = \"Blog\";\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport { Button, FormGroup, Label, Col, Alert } from 'reactstrap';\r\nimport { Form, Control, Errors, actions } from 'react-redux-form';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { serverUrl } from '../../redux/serverURL';\r\n\r\nconst mapDispatchToprops = dispatch => {\r\n    return {\r\n        resetFeedbackForm: () => {\r\n            dispatch(actions.reset('feedback'));\r\n        }\r\n    }\r\n}\r\n\r\nconst required = val => val && val.length;\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(val);\r\n\r\nclass Contact extends React.Component {\r\n    state = {\r\n        alertShow: false,\r\n        alertText: null,\r\n        alertType: null\r\n    }\r\n\r\n    submitHandeler = values => {\r\n        axios.post(serverUrl + \"feedback\", values)\r\n            .then(Response => Response.status)\r\n            .then(status => {\r\n                if (status === 201) {\r\n                    this.setState({\r\n                        alertShow: true,\r\n                        alertText: \"Submitted Successfully\",\r\n                        alertType: \"success\"\r\n                    });\r\n                \r\n\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            alertShow: false\r\n                        })\r\n                    }, 8000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    alertText: \"Submit Failed\",\r\n                    alertShow: true,\r\n                    alertType: \"danger\"\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        alertShow: false\r\n                    })\r\n                }, 8000);\r\n            })\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        document.title = \"Contact\";\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\" style={{ paddingLeft: \"20px\", textAlign: \"center\" }}>\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback </h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8 mx-auto mt-4\" >\r\n                    <Alert isOpen= {this.state.alertShow} color={this.state.alertType} >{this.state.alertText}</Alert>\r\n                        <Form model=\"feedback\" onSubmit={values => this.submitHandeler(values)} >\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={3} >First Name : </Label>\r\n                                <Col md={9} >\r\n                                    <Control.text model=\".firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{\r\n                                        required\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                        required: 'Required'\r\n                                    }} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={3} >Last Name : </Label>\r\n                                <Col md={9} >\r\n                                    <Control.text model=\".lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" validators={{\r\n                                        required\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{\r\n                                        required: 'Required'\r\n                                    }} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={3} > Mobile : </Label>\r\n                                <Col md={9} >\r\n                                    <Control.text model=\".telnum\" name=\"telnum\" placeholder=\"Mobile\" className=\"form-control\" validators={{\r\n                                        required,\r\n                                        isNumber\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{\r\n                                        required: 'Required ',\r\n                                        isNumber: \"Please insert number.\"\r\n                                    }} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={3} >Email : </Label>\r\n                                <Col md={9} >\r\n                                    <Control.text model=\".email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" validators={{\r\n                                        required,\r\n                                        validEmail\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{\r\n                                        required: 'Required ',\r\n                                        validEmail: \"Please insert Valid email.\"\r\n                                    }} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 5, offset: 3 }}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Mobile</option>\r\n                                        <option>Email</option>\r\n\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={3} >Your Feedback :</Label>\r\n                                <Col md={9} >\r\n                                    <Control.textarea model=\".message\" name=\"message\" rows=\"12\" className=\"form-control\" validators={{\r\n                                        required\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".message\" show=\"touched\" messages={{\r\n                                        required: 'Required'\r\n                                    }} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Col md={{ size: 9, offset: 3 }}>\r\n                                    <Button type=\"submit\" color=\"primary\" >Send Feedback</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToprops)(Contact);","import React from 'react';\r\n\r\nconst Recipe = () => {\r\n    document.title = \"Recipe\";\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\r\n\r\n\r\nconst About = () => {\r\n    document.title = \"About\";\r\n    return (\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Home from '../representional/Home';\r\nimport Gallery from '../representional/Gallery';\r\nimport Blog from '../representional/Blog';\r\nimport Contact from '../representional/Contact';\r\nimport Recipe from '../representional/Recipe';\r\nimport About from '../representional/About';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/blog\" exact component={Blog} />\r\n                <Route path=\"/gallery\" exact component={Gallery} />\r\n                <Route path=\"/recipe\" exact component={Recipe} />\r\n                <Route path=\"/contact\" exact component={Contact} />\r\n                <Route path=\"/about\" exact component={About} />\r\n                <Redirect from=\"/home\" to=\"/\" exact />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>Grand Restaurant &#169; Copyright 2021</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport Footer from './Footer/Footer';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Body/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import { combineReducers } from 'redux';\r\nimport * as actionType from \"./actionTypes\";\r\nimport { createForms } from 'react-redux-form';\r\nimport { initialContactForm } from './form';\r\n\r\n\r\nconst dishesReducer = (disheState = { isLoading: false, dishes: [], errMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.dishesLoading:\r\n            return {\r\n                ...disheState,\r\n                isLoading: true,\r\n                dishes: []\r\n            }\r\n        case actionType.loadDishes:\r\n            return {\r\n                ...disheState,\r\n                isLoading: false,\r\n                dishes: action.payload\r\n            }\r\n        case actionType.dishesLoadFailed:\r\n            return {\r\n                ...disheState,\r\n                isLoading: false,\r\n                errMessage: action.payload\r\n            }\r\n\r\n        default:\r\n            return disheState;\r\n    }\r\n}\r\n\r\nconst commentsReducer = (commentstate = { isLoading: false, comments: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionType.addComment:\r\n            let newComment = [{\r\n                ...action.payload,\r\n                key: action.key\r\n            }]\r\n            return {\r\n                ...commentstate,\r\n                comments: commentstate.comments.concat(newComment)\r\n            }\r\n\r\n        case actionType.commentsLoading:\r\n            return {\r\n                ...commentstate,\r\n                isLoading: true,\r\n                comments: []\r\n            }\r\n\r\n        case actionType.loadComments:\r\n            let comments = [];\r\n            for (let key in action.payload) {\r\n                comments.push({\r\n                    ...action.payload[key],\r\n                    id: key\r\n                });\r\n            }\r\n            return {\r\n                ...commentstate,\r\n                isLoading: false,\r\n                comments: comments\r\n            }\r\n\r\n        default:\r\n\r\n            return commentstate;\r\n    }\r\n}\r\n\r\nexport const Reducer = combineReducers({\r\n    dishes: dishesReducer,\r\n    comments: commentsReducer,\r\n    ...createForms({\r\n        feedback: initialContactForm\r\n    })\r\n});","export const initialContactForm = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    telnum: \"\",\r\n    email: \"\",\r\n    agree: false,\r\n    contactType: \"mobile\",\r\n    message: \"\"\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { Reducer } from './Reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst Store = createStore(Reducer, applyMiddleware(thunk));\r\n\r\nexport default Store;","import React from 'react';\r\nimport './styleshits/App.css';\r\nimport Main from './components/Main';\r\nimport { HashRouter} from 'react-router-dom';\r\nimport Store from './redux/Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Provider store={Store}>\r\n                <HashRouter>\r\n                    <Main />\r\n                </HashRouter>\r\n            </Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport './styleshits/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}